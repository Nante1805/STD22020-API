

openapi: 3.0.0
info:
  title: 1.1 - OpenAPI 3.0
  description: |
    STD22020
  version: 1.0.11
servers:
  - url: https://STD22020.com
paths:
  /students:
    get:
      summary: Retrieve status information for students
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Update status information for students
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update student information
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete student information
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /teachers:
    get:
      summary: Retrieve teacher information
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Create teacher information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeacherRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    StatusResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Nantenaina
        Birthday:
          type: string
          format: date
          example: "1998-05-05"

    TeacherResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        firstName:
          type: string
          example: Tokimahery
        lastName:
          type: string
          example: Ramarozaka
        courses1:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                example: "données1"
              name:
                type: string
                example: "Base de données relationnelles"
              duration:
                type: integer
                example: 50
        courses2:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                example: "WEB1"
              name:
                type: string
                example: "Developpement WEB"
              duration:
                type: integer
                example: 70 heures
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Internet several error"

    StatusRequest:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        Birthday:
          type: string
          format: date

    TeacherRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        courses:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              name:
                type: string
              duration:
                type: integer
